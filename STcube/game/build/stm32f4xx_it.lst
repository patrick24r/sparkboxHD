ARM GAS  /tmp/ccIpL92A.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB134:
  28              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/stm32f4xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/stm32f4xx_it.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/stm32f4xx_it.c ****   *                             www.st.com/SLA0044
  16:Core/Src/stm32f4xx_it.c ****   *
  17:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f4xx_it.c ****   */
  19:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f4xx_it.c **** 
  21:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f4xx_it.c **** #include "main.h"
  23:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Core/Src/stm32f4xx_it.c **** #include "FreeRTOS.h"
  25:Core/Src/stm32f4xx_it.c **** #include "task.h"
  26:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  29:Core/Src/stm32f4xx_it.c **** 
  30:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/ccIpL92A.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  32:Core/Src/stm32f4xx_it.c **** 
  33:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
  34:Core/Src/stm32f4xx_it.c **** 
  35:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  37:Core/Src/stm32f4xx_it.c ****  
  38:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  39:Core/Src/stm32f4xx_it.c **** 
  40:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  42:Core/Src/stm32f4xx_it.c **** 
  43:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  44:Core/Src/stm32f4xx_it.c **** 
  45:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  47:Core/Src/stm32f4xx_it.c **** 
  48:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  49:Core/Src/stm32f4xx_it.c **** 
  50:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/stm32f4xx_it.c **** 
  53:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  54:Core/Src/stm32f4xx_it.c **** 
  55:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/stm32f4xx_it.c **** 
  58:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  59:Core/Src/stm32f4xx_it.c **** 
  60:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  61:Core/Src/stm32f4xx_it.c **** extern DAC_HandleTypeDef hdac;
  62:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_sdio_rx;
  63:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_sdio_tx;
  64:Core/Src/stm32f4xx_it.c **** extern SD_HandleTypeDef hsd;
  65:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim7;
  66:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim6;
  67:Core/Src/stm32f4xx_it.c **** 
  68:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  69:Core/Src/stm32f4xx_it.c **** 
  70:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  71:Core/Src/stm32f4xx_it.c **** 
  72:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  73:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  74:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  75:Core/Src/stm32f4xx_it.c **** /**
  76:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  77:Core/Src/stm32f4xx_it.c ****   */
  78:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  79:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 79 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  80:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  81:Core/Src/stm32f4xx_it.c **** 
  82:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
ARM GAS  /tmp/ccIpL92A.s 			page 3


  83:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  84:Core/Src/stm32f4xx_it.c **** 
  85:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  86:Core/Src/stm32f4xx_it.c **** }
  34              		.loc 1 86 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE134:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB135:
  87:Core/Src/stm32f4xx_it.c **** 
  88:Core/Src/stm32f4xx_it.c **** /**
  89:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  90:Core/Src/stm32f4xx_it.c ****   */
  91:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  92:Core/Src/stm32f4xx_it.c **** {
  49              		.loc 1 92 1 view -0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L3:
  93:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  94:Core/Src/stm32f4xx_it.c **** 
  95:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  96:Core/Src/stm32f4xx_it.c ****   while (1)
  56              		.loc 1 96 3 discriminator 1 view .LVU3
  97:Core/Src/stm32f4xx_it.c ****   {
  98:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  99:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 100:Core/Src/stm32f4xx_it.c ****   }
  57              		.loc 1 100 3 discriminator 1 view .LVU4
  96:Core/Src/stm32f4xx_it.c ****   {
  58              		.loc 1 96 9 discriminator 1 view .LVU5
  59 0000 FEE7     		b	.L3
  60              		.cfi_endproc
  61              	.LFE135:
  63              		.section	.text.MemManage_Handler,"ax",%progbits
  64              		.align	1
  65              		.global	MemManage_Handler
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu fpv4-sp-d16
  71              	MemManage_Handler:
  72              	.LFB136:
 101:Core/Src/stm32f4xx_it.c **** }
 102:Core/Src/stm32f4xx_it.c **** 
 103:Core/Src/stm32f4xx_it.c **** /**
ARM GAS  /tmp/ccIpL92A.s 			page 4


 104:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 105:Core/Src/stm32f4xx_it.c ****   */
 106:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 107:Core/Src/stm32f4xx_it.c **** {
  73              		.loc 1 107 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L5:
 108:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 109:Core/Src/stm32f4xx_it.c **** 
 110:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 111:Core/Src/stm32f4xx_it.c ****   while (1)
  80              		.loc 1 111 3 discriminator 1 view .LVU7
 112:Core/Src/stm32f4xx_it.c ****   {
 113:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 114:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 115:Core/Src/stm32f4xx_it.c ****   }
  81              		.loc 1 115 3 discriminator 1 view .LVU8
 111:Core/Src/stm32f4xx_it.c ****   {
  82              		.loc 1 111 9 discriminator 1 view .LVU9
  83 0000 FEE7     		b	.L5
  84              		.cfi_endproc
  85              	.LFE136:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	BusFault_Handler:
  96              	.LFB137:
 116:Core/Src/stm32f4xx_it.c **** }
 117:Core/Src/stm32f4xx_it.c **** 
 118:Core/Src/stm32f4xx_it.c **** /**
 119:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 120:Core/Src/stm32f4xx_it.c ****   */
 121:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 122:Core/Src/stm32f4xx_it.c **** {
  97              		.loc 1 122 1 view -0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L7:
 123:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 124:Core/Src/stm32f4xx_it.c **** 
 125:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 126:Core/Src/stm32f4xx_it.c ****   while (1)
 104              		.loc 1 126 3 discriminator 1 view .LVU11
 127:Core/Src/stm32f4xx_it.c ****   {
 128:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 129:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
ARM GAS  /tmp/ccIpL92A.s 			page 5


 130:Core/Src/stm32f4xx_it.c ****   }
 105              		.loc 1 130 3 discriminator 1 view .LVU12
 126:Core/Src/stm32f4xx_it.c ****   {
 106              		.loc 1 126 9 discriminator 1 view .LVU13
 107 0000 FEE7     		b	.L7
 108              		.cfi_endproc
 109              	.LFE137:
 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	UsageFault_Handler:
 120              	.LFB138:
 131:Core/Src/stm32f4xx_it.c **** }
 132:Core/Src/stm32f4xx_it.c **** 
 133:Core/Src/stm32f4xx_it.c **** /**
 134:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 135:Core/Src/stm32f4xx_it.c ****   */
 136:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 137:Core/Src/stm32f4xx_it.c **** {
 121              		.loc 1 137 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L9:
 138:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 139:Core/Src/stm32f4xx_it.c **** 
 140:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 141:Core/Src/stm32f4xx_it.c ****   while (1)
 128              		.loc 1 141 3 discriminator 1 view .LVU15
 142:Core/Src/stm32f4xx_it.c ****   {
 143:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 144:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 145:Core/Src/stm32f4xx_it.c ****   }
 129              		.loc 1 145 3 discriminator 1 view .LVU16
 141:Core/Src/stm32f4xx_it.c ****   {
 130              		.loc 1 141 9 discriminator 1 view .LVU17
 131 0000 FEE7     		b	.L9
 132              		.cfi_endproc
 133              	.LFE138:
 135              		.section	.text.DebugMon_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	DebugMon_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	DebugMon_Handler:
 144              	.LFB139:
 146:Core/Src/stm32f4xx_it.c **** }
 147:Core/Src/stm32f4xx_it.c **** 
 148:Core/Src/stm32f4xx_it.c **** /**
ARM GAS  /tmp/ccIpL92A.s 			page 6


 149:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 150:Core/Src/stm32f4xx_it.c ****   */
 151:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 152:Core/Src/stm32f4xx_it.c **** {
 145              		.loc 1 152 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 153:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 154:Core/Src/stm32f4xx_it.c **** 
 155:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 156:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 157:Core/Src/stm32f4xx_it.c **** 
 158:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 159:Core/Src/stm32f4xx_it.c **** }
 150              		.loc 1 159 1 view .LVU19
 151 0000 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE139:
 155              		.section	.text.SDIO_IRQHandler,"ax",%progbits
 156              		.align	1
 157              		.global	SDIO_IRQHandler
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	SDIO_IRQHandler:
 164              	.LFB140:
 160:Core/Src/stm32f4xx_it.c **** 
 161:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 162:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 163:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 164:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 165:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 166:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 167:Core/Src/stm32f4xx_it.c **** 
 168:Core/Src/stm32f4xx_it.c **** /**
 169:Core/Src/stm32f4xx_it.c ****   * @brief This function handles SDIO global interrupt.
 170:Core/Src/stm32f4xx_it.c ****   */
 171:Core/Src/stm32f4xx_it.c **** void SDIO_IRQHandler(void)
 172:Core/Src/stm32f4xx_it.c **** {
 165              		.loc 1 172 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169 0000 08B5     		push	{r3, lr}
 170              	.LCFI0:
 171              		.cfi_def_cfa_offset 8
 172              		.cfi_offset 3, -8
 173              		.cfi_offset 14, -4
 173:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SDIO_IRQn 0 */
 174:Core/Src/stm32f4xx_it.c **** 
 175:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SDIO_IRQn 0 */
 176:Core/Src/stm32f4xx_it.c ****   HAL_SD_IRQHandler(&hsd);
 174              		.loc 1 176 3 view .LVU21
 175 0002 0248     		ldr	r0, .L13
ARM GAS  /tmp/ccIpL92A.s 			page 7


 176 0004 FFF7FEFF 		bl	HAL_SD_IRQHandler
 177              	.LVL0:
 177:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SDIO_IRQn 1 */
 178:Core/Src/stm32f4xx_it.c **** 
 179:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SDIO_IRQn 1 */
 180:Core/Src/stm32f4xx_it.c **** }
 178              		.loc 1 180 1 is_stmt 0 view .LVU22
 179 0008 08BD     		pop	{r3, pc}
 180              	.L14:
 181 000a 00BF     		.align	2
 182              	.L13:
 183 000c 00000000 		.word	hsd
 184              		.cfi_endproc
 185              	.LFE140:
 187              		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
 188              		.align	1
 189              		.global	TIM6_DAC_IRQHandler
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 193              		.fpu fpv4-sp-d16
 195              	TIM6_DAC_IRQHandler:
 196              	.LFB141:
 181:Core/Src/stm32f4xx_it.c **** 
 182:Core/Src/stm32f4xx_it.c **** /**
 183:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
 184:Core/Src/stm32f4xx_it.c ****   */
 185:Core/Src/stm32f4xx_it.c **** void TIM6_DAC_IRQHandler(void)
 186:Core/Src/stm32f4xx_it.c **** {
 197              		.loc 1 186 1 is_stmt 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201 0000 08B5     		push	{r3, lr}
 202              	.LCFI1:
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 3, -8
 205              		.cfi_offset 14, -4
 187:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 0 */
 188:Core/Src/stm32f4xx_it.c **** 
 189:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 0 */
 190:Core/Src/stm32f4xx_it.c ****   HAL_DAC_IRQHandler(&hdac);
 206              		.loc 1 190 3 view .LVU24
 207 0002 0348     		ldr	r0, .L17
 208 0004 FFF7FEFF 		bl	HAL_DAC_IRQHandler
 209              	.LVL1:
 191:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 210              		.loc 1 191 3 view .LVU25
 211 0008 0248     		ldr	r0, .L17+4
 212 000a FFF7FEFF 		bl	HAL_TIM_IRQHandler
 213              	.LVL2:
 192:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 1 */
 193:Core/Src/stm32f4xx_it.c **** 
 194:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 1 */
 195:Core/Src/stm32f4xx_it.c **** }
 214              		.loc 1 195 1 is_stmt 0 view .LVU26
 215 000e 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccIpL92A.s 			page 8


 216              	.L18:
 217              		.align	2
 218              	.L17:
 219 0010 00000000 		.word	hdac
 220 0014 00000000 		.word	htim6
 221              		.cfi_endproc
 222              	.LFE141:
 224              		.section	.text.TIM7_IRQHandler,"ax",%progbits
 225              		.align	1
 226              		.global	TIM7_IRQHandler
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
 230              		.fpu fpv4-sp-d16
 232              	TIM7_IRQHandler:
 233              	.LFB142:
 196:Core/Src/stm32f4xx_it.c **** 
 197:Core/Src/stm32f4xx_it.c **** /**
 198:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM7 global interrupt.
 199:Core/Src/stm32f4xx_it.c ****   */
 200:Core/Src/stm32f4xx_it.c **** void TIM7_IRQHandler(void)
 201:Core/Src/stm32f4xx_it.c **** {
 234              		.loc 1 201 1 is_stmt 1 view -0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238 0000 08B5     		push	{r3, lr}
 239              	.LCFI2:
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 3, -8
 242              		.cfi_offset 14, -4
 202:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM7_IRQn 0 */
 203:Core/Src/stm32f4xx_it.c **** 
 204:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM7_IRQn 0 */
 205:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim7);
 243              		.loc 1 205 3 view .LVU28
 244 0002 0248     		ldr	r0, .L21
 245 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 246              	.LVL3:
 206:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM7_IRQn 1 */
 207:Core/Src/stm32f4xx_it.c **** 
 208:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM7_IRQn 1 */
 209:Core/Src/stm32f4xx_it.c **** }
 247              		.loc 1 209 1 is_stmt 0 view .LVU29
 248 0008 08BD     		pop	{r3, pc}
 249              	.L22:
 250 000a 00BF     		.align	2
 251              	.L21:
 252 000c 00000000 		.word	htim7
 253              		.cfi_endproc
 254              	.LFE142:
 256              		.section	.text.DMA2_Stream3_IRQHandler,"ax",%progbits
 257              		.align	1
 258              		.global	DMA2_Stream3_IRQHandler
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
ARM GAS  /tmp/ccIpL92A.s 			page 9


 262              		.fpu fpv4-sp-d16
 264              	DMA2_Stream3_IRQHandler:
 265              	.LFB143:
 210:Core/Src/stm32f4xx_it.c **** 
 211:Core/Src/stm32f4xx_it.c **** /**
 212:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream3 global interrupt.
 213:Core/Src/stm32f4xx_it.c ****   */
 214:Core/Src/stm32f4xx_it.c **** void DMA2_Stream3_IRQHandler(void)
 215:Core/Src/stm32f4xx_it.c **** {
 266              		.loc 1 215 1 is_stmt 1 view -0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270 0000 08B5     		push	{r3, lr}
 271              	.LCFI3:
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 3, -8
 274              		.cfi_offset 14, -4
 216:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream3_IRQn 0 */
 217:Core/Src/stm32f4xx_it.c **** 
 218:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream3_IRQn 0 */
 219:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_sdio_rx);
 275              		.loc 1 219 3 view .LVU31
 276 0002 0248     		ldr	r0, .L25
 277 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 278              	.LVL4:
 220:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream3_IRQn 1 */
 221:Core/Src/stm32f4xx_it.c **** 
 222:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream3_IRQn 1 */
 223:Core/Src/stm32f4xx_it.c **** }
 279              		.loc 1 223 1 is_stmt 0 view .LVU32
 280 0008 08BD     		pop	{r3, pc}
 281              	.L26:
 282 000a 00BF     		.align	2
 283              	.L25:
 284 000c 00000000 		.word	hdma_sdio_rx
 285              		.cfi_endproc
 286              	.LFE143:
 288              		.section	.text.DMA2_Stream6_IRQHandler,"ax",%progbits
 289              		.align	1
 290              		.global	DMA2_Stream6_IRQHandler
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu fpv4-sp-d16
 296              	DMA2_Stream6_IRQHandler:
 297              	.LFB144:
 224:Core/Src/stm32f4xx_it.c **** 
 225:Core/Src/stm32f4xx_it.c **** /**
 226:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream6 global interrupt.
 227:Core/Src/stm32f4xx_it.c ****   */
 228:Core/Src/stm32f4xx_it.c **** void DMA2_Stream6_IRQHandler(void)
 229:Core/Src/stm32f4xx_it.c **** {
 298              		.loc 1 229 1 is_stmt 1 view -0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccIpL92A.s 			page 10


 302 0000 08B5     		push	{r3, lr}
 303              	.LCFI4:
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 3, -8
 306              		.cfi_offset 14, -4
 230:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream6_IRQn 0 */
 231:Core/Src/stm32f4xx_it.c **** 
 232:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream6_IRQn 0 */
 233:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_sdio_tx);
 307              		.loc 1 233 3 view .LVU34
 308 0002 0248     		ldr	r0, .L29
 309 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 310              	.LVL5:
 234:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream6_IRQn 1 */
 235:Core/Src/stm32f4xx_it.c **** 
 236:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream6_IRQn 1 */
 237:Core/Src/stm32f4xx_it.c **** }
 311              		.loc 1 237 1 is_stmt 0 view .LVU35
 312 0008 08BD     		pop	{r3, pc}
 313              	.L30:
 314 000a 00BF     		.align	2
 315              	.L29:
 316 000c 00000000 		.word	hdma_sdio_tx
 317              		.cfi_endproc
 318              	.LFE144:
 320              		.text
 321              	.Letext0:
 322              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 323              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 324              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 325              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 326              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 327              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 328              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dac.h"
 329              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_sdmmc.h"
 330              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sd.h"
 331              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 332              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccIpL92A.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccIpL92A.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccIpL92A.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccIpL92A.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccIpL92A.s:47     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccIpL92A.s:64     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccIpL92A.s:71     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccIpL92A.s:88     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccIpL92A.s:95     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccIpL92A.s:112    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccIpL92A.s:119    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccIpL92A.s:136    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccIpL92A.s:143    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccIpL92A.s:156    .text.SDIO_IRQHandler:0000000000000000 $t
     /tmp/ccIpL92A.s:163    .text.SDIO_IRQHandler:0000000000000000 SDIO_IRQHandler
     /tmp/ccIpL92A.s:183    .text.SDIO_IRQHandler:000000000000000c $d
     /tmp/ccIpL92A.s:188    .text.TIM6_DAC_IRQHandler:0000000000000000 $t
     /tmp/ccIpL92A.s:195    .text.TIM6_DAC_IRQHandler:0000000000000000 TIM6_DAC_IRQHandler
     /tmp/ccIpL92A.s:219    .text.TIM6_DAC_IRQHandler:0000000000000010 $d
     /tmp/ccIpL92A.s:225    .text.TIM7_IRQHandler:0000000000000000 $t
     /tmp/ccIpL92A.s:232    .text.TIM7_IRQHandler:0000000000000000 TIM7_IRQHandler
     /tmp/ccIpL92A.s:252    .text.TIM7_IRQHandler:000000000000000c $d
     /tmp/ccIpL92A.s:257    .text.DMA2_Stream3_IRQHandler:0000000000000000 $t
     /tmp/ccIpL92A.s:264    .text.DMA2_Stream3_IRQHandler:0000000000000000 DMA2_Stream3_IRQHandler
     /tmp/ccIpL92A.s:284    .text.DMA2_Stream3_IRQHandler:000000000000000c $d
     /tmp/ccIpL92A.s:289    .text.DMA2_Stream6_IRQHandler:0000000000000000 $t
     /tmp/ccIpL92A.s:296    .text.DMA2_Stream6_IRQHandler:0000000000000000 DMA2_Stream6_IRQHandler
     /tmp/ccIpL92A.s:316    .text.DMA2_Stream6_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_SD_IRQHandler
hsd
HAL_DAC_IRQHandler
HAL_TIM_IRQHandler
hdac
htim6
htim7
HAL_DMA_IRQHandler
hdma_sdio_rx
hdma_sdio_tx

// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "10/11/2019 12:58:41"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          aluTop
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module aluTop_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [127:0] currLayerHeader;
reg [10:0] pixelX;
reg [10:0] pixelY;
// wires                                               
wire [15:0] characterIndex;
wire [25:0] flashAddressBits;
wire [7:0] layerID;
wire [15:0] layerX;
wire [15:0] layerY;
wire [25:0] ramAddressOffset;
wire readFlashEn;
wire readRamEn;

// assign statements (if any)                          
aluTop i1 (
// port map - connection between master ports and signals/registers   
	.characterIndex(characterIndex),
	.currLayerHeader(currLayerHeader),
	.flashAddressBits(flashAddressBits),
	.layerID(layerID),
	.layerX(layerX),
	.layerY(layerY),
	.pixelX(pixelX),
	.pixelY(pixelY),
	.ramAddressOffset(ramAddressOffset),
	.readFlashEn(readFlashEn),
	.readRamEn(readRamEn)
);
initial 
begin 
#1000000 $finish;
end 
// pixelX[ 10 ]
initial
begin
	pixelX[10] = 1'b0;
end 
// pixelX[ 9 ]
initial
begin
	pixelX[9] = 1'b0;
end 
// pixelX[ 8 ]
initial
begin
	pixelX[8] = 1'b0;
end 
// pixelX[ 7 ]
initial
begin
	pixelX[7] = 1'b0;
end 
// pixelX[ 6 ]
initial
begin
	pixelX[6] = 1'b0;
end 
// pixelX[ 5 ]
initial
begin
	pixelX[5] = 1'b0;
end 
// pixelX[ 4 ]
initial
begin
	pixelX[4] = 1'b0;
end 
// pixelX[ 3 ]
initial
begin
	pixelX[3] = 1'b0;
	pixelX[3] = #780000 1'b1;
end 
// pixelX[ 2 ]
initial
begin
	pixelX[2] = 1'b0;
	pixelX[2] = #540000 1'b1;
	pixelX[2] = #240000 1'b0;
end 
// pixelX[ 1 ]
initial
begin
	pixelX[1] = 1'b0;
	pixelX[1] = #420000 1'b1;
	pixelX[1] = #120000 1'b0;
	pixelX[1] = #120000 1'b1;
	pixelX[1] = #120000 1'b0;
	pixelX[1] = #120000 1'b1;
end 
// pixelX[ 0 ]
initial
begin
	pixelX[0] = 1'b0;
	pixelX[0] = #360000 1'b1;
	pixelX[0] = #20000 1'b0;
	pixelX[0] = #10000 1'b1;
	pixelX[0] = #30000 1'b0;
	pixelX[0] = #60000 1'b1;
	# 60000;
	repeat(3)
	begin
		pixelX[0] = 1'b0;
		pixelX[0] = #60000 1'b1;
		# 60000;
	end
	pixelX[0] = 1'b0;
	pixelX[0] = #60000 1'b1;
end 
// pixelY[ 10 ]
initial
begin
	pixelY[10] = 1'b0;
end 
// pixelY[ 9 ]
initial
begin
	pixelY[9] = 1'b0;
end 
// pixelY[ 8 ]
initial
begin
	pixelY[8] = 1'b0;
end 
// pixelY[ 7 ]
initial
begin
	pixelY[7] = 1'b0;
end 
// pixelY[ 6 ]
initial
begin
	pixelY[6] = 1'b0;
end 
// pixelY[ 5 ]
initial
begin
	pixelY[5] = 1'b0;
end 
// pixelY[ 4 ]
initial
begin
	pixelY[4] = 1'b0;
end 
// pixelY[ 3 ]
initial
begin
	pixelY[3] = 1'b0;
end 
// pixelY[ 2 ]
initial
begin
	pixelY[2] = 1'b0;
end 
// pixelY[ 1 ]
initial
begin
	pixelY[1] = 1'b0;
	pixelY[1] = #400000 1'b1;
	pixelY[1] = #20000 1'b0;
end 
// pixelY[ 0 ]
initial
begin
	pixelY[0] = 1'b0;
	pixelY[0] = #380000 1'b1;
	pixelY[0] = #20000 1'b0;
end 

// currLayerHeader[15]
initial
begin
	currLayerHeader[15] = 1'b0;
end 

// currLayerHeader[14]
initial
begin
	currLayerHeader[14] = 1'b0;
end 

// currLayerHeader[13]
initial
begin
	currLayerHeader[13] = 1'b0;
end 

// currLayerHeader[12]
initial
begin
	currLayerHeader[12] = 1'b0;
end 

// currLayerHeader[11]
initial
begin
	currLayerHeader[11] = 1'b0;
end 

// currLayerHeader[10]
initial
begin
	currLayerHeader[10] = 1'b0;
end 

// currLayerHeader[9]
initial
begin
	currLayerHeader[9] = 1'b0;
end 

// currLayerHeader[8]
initial
begin
	currLayerHeader[8] = 1'b0;
end 

// currLayerHeader[7]
initial
begin
	currLayerHeader[7] = 1'b0;
end 

// currLayerHeader[6]
initial
begin
	currLayerHeader[6] = 1'b0;
end 

// currLayerHeader[5]
initial
begin
	currLayerHeader[5] = 1'b0;
end 

// currLayerHeader[4]
initial
begin
	currLayerHeader[4] = 1'b0;
end 

// currLayerHeader[3]
initial
begin
	currLayerHeader[3] = 1'b1;
	currLayerHeader[3] = #300000 1'b0;
end 

// currLayerHeader[2]
initial
begin
	currLayerHeader[2] = 1'b1;
end 

// currLayerHeader[1]
initial
begin
	currLayerHeader[1] = 1'b1;
	currLayerHeader[1] = #300000 1'b0;
end 

// currLayerHeader[0]
initial
begin
	currLayerHeader[0] = 1'b1;
end 

// currLayerHeader[31]
initial
begin
	currLayerHeader[31] = 1'b0;
end 

// currLayerHeader[30]
initial
begin
	currLayerHeader[30] = 1'b0;
end 

// currLayerHeader[29]
initial
begin
	currLayerHeader[29] = 1'b0;
end 

// currLayerHeader[28]
initial
begin
	currLayerHeader[28] = 1'b0;
end 

// currLayerHeader[27]
initial
begin
	currLayerHeader[27] = 1'b0;
end 

// currLayerHeader[26]
initial
begin
	currLayerHeader[26] = 1'b0;
end 

// currLayerHeader[25]
initial
begin
	currLayerHeader[25] = 1'b0;
end 

// currLayerHeader[24]
initial
begin
	currLayerHeader[24] = 1'b0;
end 

// currLayerHeader[23]
initial
begin
	currLayerHeader[23] = 1'b0;
end 

// currLayerHeader[22]
initial
begin
	currLayerHeader[22] = 1'b0;
end 

// currLayerHeader[21]
initial
begin
	currLayerHeader[21] = 1'b0;
end 

// currLayerHeader[20]
initial
begin
	currLayerHeader[20] = 1'b0;
end 

// currLayerHeader[19]
initial
begin
	currLayerHeader[19] = 1'b1;
end 

// currLayerHeader[18]
initial
begin
	currLayerHeader[18] = 1'b0;
end 

// currLayerHeader[17]
initial
begin
	currLayerHeader[17] = 1'b1;
end 

// currLayerHeader[16]
initial
begin
	currLayerHeader[16] = 1'b0;
end 

// currLayerHeader[47]
initial
begin
	currLayerHeader[47] = 1'b0;
end 

// currLayerHeader[46]
initial
begin
	currLayerHeader[46] = 1'b0;
end 

// currLayerHeader[45]
initial
begin
	currLayerHeader[45] = 1'b0;
end 

// currLayerHeader[44]
initial
begin
	currLayerHeader[44] = 1'b0;
end 

// currLayerHeader[43]
initial
begin
	currLayerHeader[43] = 1'b0;
end 

// currLayerHeader[42]
initial
begin
	currLayerHeader[42] = 1'b0;
end 

// currLayerHeader[41]
initial
begin
	currLayerHeader[41] = 1'b0;
end 

// currLayerHeader[40]
initial
begin
	currLayerHeader[40] = 1'b0;
end 

// currLayerHeader[39]
initial
begin
	currLayerHeader[39] = 1'b0;
end 

// currLayerHeader[38]
initial
begin
	currLayerHeader[38] = 1'b0;
end 

// currLayerHeader[37]
initial
begin
	currLayerHeader[37] = 1'b0;
end 

// currLayerHeader[36]
initial
begin
	currLayerHeader[36] = 1'b1;
end 

// currLayerHeader[35]
initial
begin
	currLayerHeader[35] = 1'b0;
end 

// currLayerHeader[34]
initial
begin
	currLayerHeader[34] = 1'b1;
end 

// currLayerHeader[33]
initial
begin
	currLayerHeader[33] = 1'b0;
end 

// currLayerHeader[32]
initial
begin
	currLayerHeader[32] = 1'b0;
end 

// currLayerHeader[63]
initial
begin
	currLayerHeader[63] = 1'b0;
end 

// currLayerHeader[62]
initial
begin
	currLayerHeader[62] = 1'b0;
end 

// currLayerHeader[61]
initial
begin
	currLayerHeader[61] = 1'b0;
end 

// currLayerHeader[60]
initial
begin
	currLayerHeader[60] = 1'b0;
end 

// currLayerHeader[59]
initial
begin
	currLayerHeader[59] = 1'b0;
end 

// currLayerHeader[58]
initial
begin
	currLayerHeader[58] = 1'b0;
end 

// currLayerHeader[57]
initial
begin
	currLayerHeader[57] = 1'b0;
end 

// currLayerHeader[56]
initial
begin
	currLayerHeader[56] = 1'b0;
end 

// currLayerHeader[55]
initial
begin
	currLayerHeader[55] = 1'b0;
end 

// currLayerHeader[54]
initial
begin
	currLayerHeader[54] = 1'b0;
end 

// currLayerHeader[53]
initial
begin
	currLayerHeader[53] = 1'b0;
end 

// currLayerHeader[52]
initial
begin
	currLayerHeader[52] = 1'b0;
end 

// currLayerHeader[51]
initial
begin
	currLayerHeader[51] = 1'b0;
end 

// currLayerHeader[50]
initial
begin
	currLayerHeader[50] = 1'b0;
end 

// currLayerHeader[49]
initial
begin
	currLayerHeader[49] = 1'b0;
end 

// currLayerHeader[48]
initial
begin
	currLayerHeader[48] = 1'b0;
end 

// currLayerHeader[79]
initial
begin
	currLayerHeader[79] = 1'b0;
end 

// currLayerHeader[78]
initial
begin
	currLayerHeader[78] = 1'b0;
end 

// currLayerHeader[77]
initial
begin
	currLayerHeader[77] = 1'b0;
end 

// currLayerHeader[76]
initial
begin
	currLayerHeader[76] = 1'b0;
end 

// currLayerHeader[75]
initial
begin
	currLayerHeader[75] = 1'b0;
end 

// currLayerHeader[74]
initial
begin
	currLayerHeader[74] = 1'b0;
end 

// currLayerHeader[73]
initial
begin
	currLayerHeader[73] = 1'b0;
end 

// currLayerHeader[72]
initial
begin
	currLayerHeader[72] = 1'b0;
end 

// currLayerHeader[71]
initial
begin
	currLayerHeader[71] = 1'b0;
end 

// currLayerHeader[70]
initial
begin
	currLayerHeader[70] = 1'b0;
end 

// currLayerHeader[69]
initial
begin
	currLayerHeader[69] = 1'b0;
end 

// currLayerHeader[68]
initial
begin
	currLayerHeader[68] = 1'b0;
end 

// currLayerHeader[67]
initial
begin
	currLayerHeader[67] = 1'b0;
end 

// currLayerHeader[66]
initial
begin
	currLayerHeader[66] = 1'b0;
end 

// currLayerHeader[65]
initial
begin
	currLayerHeader[65] = 1'b0;
end 

// currLayerHeader[64]
initial
begin
	currLayerHeader[64] = 1'b0;
end 

// currLayerHeader[95]
initial
begin
	currLayerHeader[95] = 1'b0;
end 

// currLayerHeader[94]
initial
begin
	currLayerHeader[94] = 1'b0;
end 

// currLayerHeader[93]
initial
begin
	currLayerHeader[93] = 1'b0;
end 

// currLayerHeader[92]
initial
begin
	currLayerHeader[92] = 1'b0;
end 

// currLayerHeader[91]
initial
begin
	currLayerHeader[91] = 1'b0;
end 

// currLayerHeader[90]
initial
begin
	currLayerHeader[90] = 1'b0;
end 

// currLayerHeader[89]
initial
begin
	currLayerHeader[89] = 1'b0;
end 

// currLayerHeader[88]
initial
begin
	currLayerHeader[88] = 1'b0;
end 

// currLayerHeader[87]
initial
begin
	currLayerHeader[87] = 1'b0;
end 

// currLayerHeader[86]
initial
begin
	currLayerHeader[86] = 1'b0;
end 

// currLayerHeader[85]
initial
begin
	currLayerHeader[85] = 1'b0;
end 

// currLayerHeader[84]
initial
begin
	currLayerHeader[84] = 1'b0;
end 

// currLayerHeader[83]
initial
begin
	currLayerHeader[83] = 1'b0;
end 

// currLayerHeader[82]
initial
begin
	currLayerHeader[82] = 1'b0;
end 

// currLayerHeader[81]
initial
begin
	currLayerHeader[81] = 1'b0;
end 

// currLayerHeader[80]
initial
begin
	currLayerHeader[80] = 1'b0;
	currLayerHeader[80] = #370000 1'b1;
	currLayerHeader[80] = #10000 1'b0;
end 

// currLayerHeader[111]
initial
begin
	currLayerHeader[111] = 1'b0;
end 

// currLayerHeader[110]
initial
begin
	currLayerHeader[110] = 1'b0;
end 

// currLayerHeader[109]
initial
begin
	currLayerHeader[109] = 1'b0;
end 

// currLayerHeader[108]
initial
begin
	currLayerHeader[108] = 1'b0;
end 

// currLayerHeader[107]
initial
begin
	currLayerHeader[107] = 1'b0;
end 

// currLayerHeader[106]
initial
begin
	currLayerHeader[106] = 1'b0;
end 

// currLayerHeader[105]
initial
begin
	currLayerHeader[105] = 1'b0;
end 

// currLayerHeader[104]
initial
begin
	currLayerHeader[104] = 1'b0;
end 

// currLayerHeader[103]
initial
begin
	currLayerHeader[103] = 1'b0;
end 

// currLayerHeader[102]
initial
begin
	currLayerHeader[102] = 1'b0;
end 

// currLayerHeader[101]
initial
begin
	currLayerHeader[101] = 1'b0;
end 

// currLayerHeader[100]
initial
begin
	currLayerHeader[100] = 1'b0;
end 

// currLayerHeader[99]
initial
begin
	currLayerHeader[99] = 1'b0;
end 

// currLayerHeader[98]
initial
begin
	currLayerHeader[98] = 1'b0;
end 

// currLayerHeader[97]
initial
begin
	currLayerHeader[97] = 1'b1;
end 

// currLayerHeader[96]
initial
begin
	currLayerHeader[96] = 1'b1;
end 

// currLayerHeader[127]
initial
begin
	currLayerHeader[127] = 1'b0;
end 

// currLayerHeader[126]
initial
begin
	currLayerHeader[126] = 1'b0;
end 

// currLayerHeader[125]
initial
begin
	currLayerHeader[125] = 1'b0;
end 

// currLayerHeader[124]
initial
begin
	currLayerHeader[124] = 1'b0;
end 

// currLayerHeader[123]
initial
begin
	currLayerHeader[123] = 1'b0;
end 

// currLayerHeader[122]
initial
begin
	currLayerHeader[122] = 1'b0;
end 

// currLayerHeader[121]
initial
begin
	currLayerHeader[121] = 1'b0;
end 

// currLayerHeader[120]
initial
begin
	currLayerHeader[120] = 1'b0;
end 

// currLayerHeader[119]
initial
begin
	currLayerHeader[119] = 1'b0;
end 

// currLayerHeader[118]
initial
begin
	currLayerHeader[118] = 1'b0;
end 

// currLayerHeader[117]
initial
begin
	currLayerHeader[117] = 1'b0;
end 

// currLayerHeader[116]
initial
begin
	currLayerHeader[116] = 1'b0;
end 

// currLayerHeader[115]
initial
begin
	currLayerHeader[115] = 1'b0;
end 

// currLayerHeader[114]
initial
begin
	currLayerHeader[114] = 1'b0;
end 

// currLayerHeader[113]
initial
begin
	currLayerHeader[113] = 1'b0;
end 

// currLayerHeader[112]
initial
begin
	currLayerHeader[112] = 1'b0;
	currLayerHeader[112] = #480000 1'b1;
	currLayerHeader[112] = #80000 1'b0;
end 
endmodule


ARM GAS  /tmp/ccRygZfs.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_SDIO_SD_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_SDIO_SD_Init:
  26              	.LFB132:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** 
  21:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/main.c **** #include "main.h"
  23:Core/Src/main.c **** #include "fatfs.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/ccRygZfs.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** SD_HandleTypeDef hsd;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** TIM_HandleTypeDef htim11;
  49:Core/Src/main.c **** TIM_HandleTypeDef htim13;
  50:Core/Src/main.c **** TIM_HandleTypeDef htim14;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** UART_HandleTypeDef huart1;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  59:Core/Src/main.c **** void SystemClock_Config(void);
  60:Core/Src/main.c **** static void MX_GPIO_Init(void);
  61:Core/Src/main.c **** static void MX_SDIO_SD_Init(void);
  62:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  63:Core/Src/main.c **** static void MX_TIM11_Init(void);
  64:Core/Src/main.c **** static void MX_TIM14_Init(void);
  65:Core/Src/main.c **** static void MX_TIM13_Init(void);
  66:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END PFP */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  71:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* USER CODE END 0 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /**
  76:Core/Src/main.c ****   * @brief  The application entry point.
  77:Core/Src/main.c ****   * @retval int
  78:Core/Src/main.c ****   */
  79:Core/Src/main.c **** int main(void)
  80:Core/Src/main.c **** {
  81:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END 1 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  88:Core/Src/main.c ****   HAL_Init();
ARM GAS  /tmp/ccRygZfs.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END Init */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Configure the system clock */
  95:Core/Src/main.c ****   SystemClock_Config();
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END SysInit */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Initialize all configured peripherals */
 102:Core/Src/main.c ****   MX_GPIO_Init();
 103:Core/Src/main.c ****   MX_SDIO_SD_Init();
 104:Core/Src/main.c ****   MX_USART1_UART_Init();
 105:Core/Src/main.c ****   MX_FATFS_Init();
 106:Core/Src/main.c ****   MX_TIM11_Init();
 107:Core/Src/main.c ****   MX_TIM14_Init();
 108:Core/Src/main.c ****   MX_TIM13_Init();
 109:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE END 2 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Infinite loop */
 114:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 115:Core/Src/main.c ****   while (1)
 116:Core/Src/main.c ****   {
 117:Core/Src/main.c ****     /* USER CODE END WHILE */
 118:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_12);
 119:Core/Src/main.c ****     HAL_Delay(250);
 120:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_13);
 121:Core/Src/main.c ****     HAL_Delay(250);
 122:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_14);
 123:Core/Src/main.c ****     HAL_Delay(250);
 124:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_15);
 125:Core/Src/main.c ****     HAL_Delay(250);
 126:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 127:Core/Src/main.c ****   }
 128:Core/Src/main.c ****   /* USER CODE END 3 */
 129:Core/Src/main.c **** }
 130:Core/Src/main.c **** 
 131:Core/Src/main.c **** /**
 132:Core/Src/main.c ****   * @brief System Clock Configuration
 133:Core/Src/main.c ****   * @retval None
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c **** void SystemClock_Config(void)
 136:Core/Src/main.c **** {
 137:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 138:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /** Configure the main internal regulator output voltage 
 141:Core/Src/main.c ****   */
 142:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 143:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 144:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
 145:Core/Src/main.c ****   */
ARM GAS  /tmp/ccRygZfs.s 			page 4


 146:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 147:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 154:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 155:Core/Src/main.c ****   {
 156:Core/Src/main.c ****     Error_Handler();
 157:Core/Src/main.c ****   }
 158:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
 159:Core/Src/main.c ****   */
 160:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 161:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 162:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 168:Core/Src/main.c ****   {
 169:Core/Src/main.c ****     Error_Handler();
 170:Core/Src/main.c ****   }
 171:Core/Src/main.c **** }
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /**
 174:Core/Src/main.c ****   * @brief SDIO Initialization Function
 175:Core/Src/main.c ****   * @param None
 176:Core/Src/main.c ****   * @retval None
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c **** static void MX_SDIO_SD_Init(void)
 179:Core/Src/main.c **** {
  28              		.loc 1 179 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /* USER CODE BEGIN SDIO_Init 0 */
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   /* USER CODE END SDIO_Init 0 */
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* USER CODE BEGIN SDIO_Init 1 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* USER CODE END SDIO_Init 1 */
 188:Core/Src/main.c ****   hsd.Instance = SDIO;
  33              		.loc 1 188 3 view .LVU1
  34              		.loc 1 188 16 is_stmt 0 view .LVU2
  35 0000 064B     		ldr	r3, .L2
  36 0002 074A     		ldr	r2, .L2+4
  37 0004 1A60     		str	r2, [r3]
 189:Core/Src/main.c ****   hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
  38              		.loc 1 189 3 is_stmt 1 view .LVU3
  39              		.loc 1 189 22 is_stmt 0 view .LVU4
  40 0006 0022     		movs	r2, #0
ARM GAS  /tmp/ccRygZfs.s 			page 5


  41 0008 5A60     		str	r2, [r3, #4]
 190:Core/Src/main.c ****   hsd.Init.ClockBypass = SDIO_CLOCK_BYPASS_ENABLE;
  42              		.loc 1 190 3 is_stmt 1 view .LVU5
  43              		.loc 1 190 24 is_stmt 0 view .LVU6
  44 000a 4FF48061 		mov	r1, #1024
  45 000e 9960     		str	r1, [r3, #8]
 191:Core/Src/main.c ****   hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
  46              		.loc 1 191 3 is_stmt 1 view .LVU7
  47              		.loc 1 191 27 is_stmt 0 view .LVU8
  48 0010 DA60     		str	r2, [r3, #12]
 192:Core/Src/main.c ****   hsd.Init.BusWide = SDIO_BUS_WIDE_1B;
  49              		.loc 1 192 3 is_stmt 1 view .LVU9
  50              		.loc 1 192 20 is_stmt 0 view .LVU10
  51 0012 1A61     		str	r2, [r3, #16]
 193:Core/Src/main.c ****   hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
  52              		.loc 1 193 3 is_stmt 1 view .LVU11
  53              		.loc 1 193 32 is_stmt 0 view .LVU12
  54 0014 5A61     		str	r2, [r3, #20]
 194:Core/Src/main.c ****   hsd.Init.ClockDiv = 0;
  55              		.loc 1 194 3 is_stmt 1 view .LVU13
  56              		.loc 1 194 21 is_stmt 0 view .LVU14
  57 0016 9A61     		str	r2, [r3, #24]
 195:Core/Src/main.c ****   /* USER CODE BEGIN SDIO_Init 2 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* USER CODE END SDIO_Init 2 */
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** }
  58              		.loc 1 199 1 view .LVU15
  59 0018 7047     		bx	lr
  60              	.L3:
  61 001a 00BF     		.align	2
  62              	.L2:
  63 001c 00000000 		.word	hsd
  64 0020 002C0140 		.word	1073818624
  65              		.cfi_endproc
  66              	.LFE132:
  68              		.section	.text.MX_GPIO_Init,"ax",%progbits
  69              		.align	1
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv4-sp-d16
  75              	MX_GPIO_Init:
  76              	.LFB137:
 200:Core/Src/main.c **** 
 201:Core/Src/main.c **** /**
 202:Core/Src/main.c ****   * @brief TIM11 Initialization Function
 203:Core/Src/main.c ****   * @param None
 204:Core/Src/main.c ****   * @retval None
 205:Core/Src/main.c ****   */
 206:Core/Src/main.c **** static void MX_TIM11_Init(void)
 207:Core/Src/main.c **** {
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE BEGIN TIM11_Init 0 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE END TIM11_Init 0 */
 212:Core/Src/main.c **** 
ARM GAS  /tmp/ccRygZfs.s 			page 6


 213:Core/Src/main.c ****   /* USER CODE BEGIN TIM11_Init 1 */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE END TIM11_Init 1 */
 216:Core/Src/main.c ****   htim11.Instance = TIM11;
 217:Core/Src/main.c ****   htim11.Init.Prescaler = 0;
 218:Core/Src/main.c ****   htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
 219:Core/Src/main.c ****   htim11.Init.Period = 1905;
 220:Core/Src/main.c ****   htim11.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 221:Core/Src/main.c ****   htim11.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 222:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim11) != HAL_OK)
 223:Core/Src/main.c ****   {
 224:Core/Src/main.c ****     Error_Handler();
 225:Core/Src/main.c ****   }
 226:Core/Src/main.c ****   /* USER CODE BEGIN TIM11_Init 2 */
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /* USER CODE END TIM11_Init 2 */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** }
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** /**
 233:Core/Src/main.c ****   * @brief TIM13 Initialization Function
 234:Core/Src/main.c ****   * @param None
 235:Core/Src/main.c ****   * @retval None
 236:Core/Src/main.c ****   */
 237:Core/Src/main.c **** static void MX_TIM13_Init(void)
 238:Core/Src/main.c **** {
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 0 */
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   /* USER CODE END TIM13_Init 0 */
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 1 */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /* USER CODE END TIM13_Init 1 */
 247:Core/Src/main.c ****   htim13.Instance = TIM13;
 248:Core/Src/main.c ****   htim13.Init.Prescaler = 0;
 249:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 250:Core/Src/main.c ****   htim13.Init.Period = 83;
 251:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 252:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 253:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 254:Core/Src/main.c ****   {
 255:Core/Src/main.c ****     Error_Handler();
 256:Core/Src/main.c ****   }
 257:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 2 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* USER CODE END TIM13_Init 2 */
 260:Core/Src/main.c **** 
 261:Core/Src/main.c **** }
 262:Core/Src/main.c **** 
 263:Core/Src/main.c **** /**
 264:Core/Src/main.c ****   * @brief TIM14 Initialization Function
 265:Core/Src/main.c ****   * @param None
 266:Core/Src/main.c ****   * @retval None
 267:Core/Src/main.c ****   */
 268:Core/Src/main.c **** static void MX_TIM14_Init(void)
 269:Core/Src/main.c **** {
ARM GAS  /tmp/ccRygZfs.s 			page 7


 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 0 */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /* USER CODE END TIM14_Init 0 */
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 1 */
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****   /* USER CODE END TIM14_Init 1 */
 278:Core/Src/main.c ****   htim14.Instance = TIM14;
 279:Core/Src/main.c ****   htim14.Init.Prescaler = 0;
 280:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 281:Core/Src/main.c ****   htim14.Init.Period = 1749;
 282:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 283:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 284:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 285:Core/Src/main.c ****   {
 286:Core/Src/main.c ****     Error_Handler();
 287:Core/Src/main.c ****   }
 288:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 2 */
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****   /* USER CODE END TIM14_Init 2 */
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** }
 293:Core/Src/main.c **** 
 294:Core/Src/main.c **** /**
 295:Core/Src/main.c ****   * @brief USART1 Initialization Function
 296:Core/Src/main.c ****   * @param None
 297:Core/Src/main.c ****   * @retval None
 298:Core/Src/main.c ****   */
 299:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 300:Core/Src/main.c **** {
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 309:Core/Src/main.c ****   huart1.Instance = USART1;
 310:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 311:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 312:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 313:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 314:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 315:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 316:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 317:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 318:Core/Src/main.c ****   {
 319:Core/Src/main.c ****     Error_Handler();
 320:Core/Src/main.c ****   }
 321:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 324:Core/Src/main.c **** 
 325:Core/Src/main.c **** }
 326:Core/Src/main.c **** 
ARM GAS  /tmp/ccRygZfs.s 			page 8


 327:Core/Src/main.c **** /**
 328:Core/Src/main.c ****   * @brief GPIO Initialization Function
 329:Core/Src/main.c ****   * @param None
 330:Core/Src/main.c ****   * @retval None
 331:Core/Src/main.c ****   */
 332:Core/Src/main.c **** static void MX_GPIO_Init(void)
 333:Core/Src/main.c **** {
  77              		.loc 1 333 1 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 40
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81 0000 70B5     		push	{r4, r5, r6, lr}
  82              	.LCFI0:
  83              		.cfi_def_cfa_offset 16
  84              		.cfi_offset 4, -16
  85              		.cfi_offset 5, -12
  86              		.cfi_offset 6, -8
  87              		.cfi_offset 14, -4
  88 0002 8AB0     		sub	sp, sp, #40
  89              	.LCFI1:
  90              		.cfi_def_cfa_offset 56
 334:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  91              		.loc 1 334 3 view .LVU17
  92              		.loc 1 334 20 is_stmt 0 view .LVU18
  93 0004 0024     		movs	r4, #0
  94 0006 0594     		str	r4, [sp, #20]
  95 0008 0694     		str	r4, [sp, #24]
  96 000a 0794     		str	r4, [sp, #28]
  97 000c 0894     		str	r4, [sp, #32]
  98 000e 0994     		str	r4, [sp, #36]
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 337:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  99              		.loc 1 337 3 is_stmt 1 view .LVU19
 100              	.LBB2:
 101              		.loc 1 337 3 view .LVU20
 102 0010 0094     		str	r4, [sp]
 103              		.loc 1 337 3 view .LVU21
 104 0012 2A4B     		ldr	r3, .L6
 105 0014 1A6B     		ldr	r2, [r3, #48]
 106 0016 42F08002 		orr	r2, r2, #128
 107 001a 1A63     		str	r2, [r3, #48]
 108              		.loc 1 337 3 view .LVU22
 109 001c 1A6B     		ldr	r2, [r3, #48]
 110 001e 02F08002 		and	r2, r2, #128
 111 0022 0092     		str	r2, [sp]
 112              		.loc 1 337 3 view .LVU23
 113 0024 009A     		ldr	r2, [sp]
 114              	.LBE2:
 115              		.loc 1 337 3 view .LVU24
 338:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 116              		.loc 1 338 3 view .LVU25
 117              	.LBB3:
 118              		.loc 1 338 3 view .LVU26
 119 0026 0194     		str	r4, [sp, #4]
 120              		.loc 1 338 3 view .LVU27
 121 0028 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/ccRygZfs.s 			page 9


 122 002a 42F00102 		orr	r2, r2, #1
 123 002e 1A63     		str	r2, [r3, #48]
 124              		.loc 1 338 3 view .LVU28
 125 0030 1A6B     		ldr	r2, [r3, #48]
 126 0032 02F00102 		and	r2, r2, #1
 127 0036 0192     		str	r2, [sp, #4]
 128              		.loc 1 338 3 view .LVU29
 129 0038 019A     		ldr	r2, [sp, #4]
 130              	.LBE3:
 131              		.loc 1 338 3 view .LVU30
 339:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 132              		.loc 1 339 3 view .LVU31
 133              	.LBB4:
 134              		.loc 1 339 3 view .LVU32
 135 003a 0294     		str	r4, [sp, #8]
 136              		.loc 1 339 3 view .LVU33
 137 003c 1A6B     		ldr	r2, [r3, #48]
 138 003e 42F00802 		orr	r2, r2, #8
 139 0042 1A63     		str	r2, [r3, #48]
 140              		.loc 1 339 3 view .LVU34
 141 0044 1A6B     		ldr	r2, [r3, #48]
 142 0046 02F00802 		and	r2, r2, #8
 143 004a 0292     		str	r2, [sp, #8]
 144              		.loc 1 339 3 view .LVU35
 145 004c 029A     		ldr	r2, [sp, #8]
 146              	.LBE4:
 147              		.loc 1 339 3 view .LVU36
 340:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 148              		.loc 1 340 3 view .LVU37
 149              	.LBB5:
 150              		.loc 1 340 3 view .LVU38
 151 004e 0394     		str	r4, [sp, #12]
 152              		.loc 1 340 3 view .LVU39
 153 0050 1A6B     		ldr	r2, [r3, #48]
 154 0052 42F00402 		orr	r2, r2, #4
 155 0056 1A63     		str	r2, [r3, #48]
 156              		.loc 1 340 3 view .LVU40
 157 0058 1A6B     		ldr	r2, [r3, #48]
 158 005a 02F00402 		and	r2, r2, #4
 159 005e 0392     		str	r2, [sp, #12]
 160              		.loc 1 340 3 view .LVU41
 161 0060 039A     		ldr	r2, [sp, #12]
 162              	.LBE5:
 163              		.loc 1 340 3 view .LVU42
 341:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 164              		.loc 1 341 3 view .LVU43
 165              	.LBB6:
 166              		.loc 1 341 3 view .LVU44
 167 0062 0494     		str	r4, [sp, #16]
 168              		.loc 1 341 3 view .LVU45
 169 0064 1A6B     		ldr	r2, [r3, #48]
 170 0066 42F00202 		orr	r2, r2, #2
 171 006a 1A63     		str	r2, [r3, #48]
 172              		.loc 1 341 3 view .LVU46
 173 006c 1B6B     		ldr	r3, [r3, #48]
 174 006e 03F00203 		and	r3, r3, #2
 175 0072 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccRygZfs.s 			page 10


 176              		.loc 1 341 3 view .LVU47
 177 0074 049B     		ldr	r3, [sp, #16]
 178              	.LBE6:
 179              		.loc 1 341 3 view .LVU48
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 344:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, LED_GREEN_Pin|LED_ORANGE_Pin|LED_RED_Pin|LED_BLUE_Pin, GPIO_PIN_RESET);
 180              		.loc 1 344 3 view .LVU49
 181 0076 124D     		ldr	r5, .L6+4
 182 0078 2246     		mov	r2, r4
 183 007a 4FF47041 		mov	r1, #61440
 184 007e 2846     		mov	r0, r5
 185 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 186              	.LVL0:
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****   /*Configure GPIO pin : BUTTON_USER_Pin */
 347:Core/Src/main.c ****   GPIO_InitStruct.Pin = BUTTON_USER_Pin;
 187              		.loc 1 347 3 view .LVU50
 188              		.loc 1 347 23 is_stmt 0 view .LVU51
 189 0084 0126     		movs	r6, #1
 190 0086 0596     		str	r6, [sp, #20]
 348:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 191              		.loc 1 348 3 is_stmt 1 view .LVU52
 192              		.loc 1 348 24 is_stmt 0 view .LVU53
 193 0088 0694     		str	r4, [sp, #24]
 349:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 194              		.loc 1 349 3 is_stmt 1 view .LVU54
 195              		.loc 1 349 24 is_stmt 0 view .LVU55
 196 008a 0794     		str	r4, [sp, #28]
 350:Core/Src/main.c ****   HAL_GPIO_Init(BUTTON_USER_GPIO_Port, &GPIO_InitStruct);
 197              		.loc 1 350 3 is_stmt 1 view .LVU56
 198 008c 05A9     		add	r1, sp, #20
 199 008e 0D48     		ldr	r0, .L6+8
 200 0090 FFF7FEFF 		bl	HAL_GPIO_Init
 201              	.LVL1:
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****   /*Configure GPIO pins : LED_GREEN_Pin LED_ORANGE_Pin LED_RED_Pin LED_BLUE_Pin */
 353:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_GREEN_Pin|LED_ORANGE_Pin|LED_RED_Pin|LED_BLUE_Pin;
 202              		.loc 1 353 3 view .LVU57
 203              		.loc 1 353 23 is_stmt 0 view .LVU58
 204 0094 4FF47043 		mov	r3, #61440
 205 0098 0593     		str	r3, [sp, #20]
 354:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 206              		.loc 1 354 3 is_stmt 1 view .LVU59
 207              		.loc 1 354 24 is_stmt 0 view .LVU60
 208 009a 0696     		str	r6, [sp, #24]
 355:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 209              		.loc 1 355 3 is_stmt 1 view .LVU61
 210              		.loc 1 355 24 is_stmt 0 view .LVU62
 211 009c 0794     		str	r4, [sp, #28]
 356:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 212              		.loc 1 356 3 is_stmt 1 view .LVU63
 213              		.loc 1 356 25 is_stmt 0 view .LVU64
 214 009e 0894     		str	r4, [sp, #32]
 357:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 215              		.loc 1 357 3 is_stmt 1 view .LVU65
 216 00a0 05A9     		add	r1, sp, #20
ARM GAS  /tmp/ccRygZfs.s 			page 11


 217 00a2 2846     		mov	r0, r5
 218 00a4 FFF7FEFF 		bl	HAL_GPIO_Init
 219              	.LVL2:
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****   /*Configure GPIO pin : SDIO_Detect_Pin */
 360:Core/Src/main.c ****   GPIO_InitStruct.Pin = SDIO_Detect_Pin;
 220              		.loc 1 360 3 view .LVU66
 221              		.loc 1 360 23 is_stmt 0 view .LVU67
 222 00a8 0823     		movs	r3, #8
 223 00aa 0593     		str	r3, [sp, #20]
 361:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 224              		.loc 1 361 3 is_stmt 1 view .LVU68
 225              		.loc 1 361 24 is_stmt 0 view .LVU69
 226 00ac 0694     		str	r4, [sp, #24]
 362:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 227              		.loc 1 362 3 is_stmt 1 view .LVU70
 228              		.loc 1 362 24 is_stmt 0 view .LVU71
 229 00ae 0794     		str	r4, [sp, #28]
 363:Core/Src/main.c ****   HAL_GPIO_Init(SDIO_Detect_GPIO_Port, &GPIO_InitStruct);
 230              		.loc 1 363 3 is_stmt 1 view .LVU72
 231 00b0 05A9     		add	r1, sp, #20
 232 00b2 2846     		mov	r0, r5
 233 00b4 FFF7FEFF 		bl	HAL_GPIO_Init
 234              	.LVL3:
 364:Core/Src/main.c **** 
 365:Core/Src/main.c **** }
 235              		.loc 1 365 1 is_stmt 0 view .LVU73
 236 00b8 0AB0     		add	sp, sp, #40
 237              	.LCFI2:
 238              		.cfi_def_cfa_offset 16
 239              		@ sp needed
 240 00ba 70BD     		pop	{r4, r5, r6, pc}
 241              	.L7:
 242              		.align	2
 243              	.L6:
 244 00bc 00380240 		.word	1073887232
 245 00c0 000C0240 		.word	1073875968
 246 00c4 00000240 		.word	1073872896
 247              		.cfi_endproc
 248              	.LFE137:
 250              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 251              		.align	1
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 255              		.fpu fpv4-sp-d16
 257              	MX_USART1_UART_Init:
 258              	.LFB136:
 300:Core/Src/main.c **** 
 259              		.loc 1 300 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263 0000 08B5     		push	{r3, lr}
 264              	.LCFI3:
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 3, -8
ARM GAS  /tmp/ccRygZfs.s 			page 12


 267              		.cfi_offset 14, -4
 309:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 268              		.loc 1 309 3 view .LVU75
 309:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 269              		.loc 1 309 19 is_stmt 0 view .LVU76
 270 0002 0848     		ldr	r0, .L10
 271 0004 084B     		ldr	r3, .L10+4
 272 0006 0360     		str	r3, [r0]
 310:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 273              		.loc 1 310 3 is_stmt 1 view .LVU77
 310:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 274              		.loc 1 310 24 is_stmt 0 view .LVU78
 275 0008 4FF4E133 		mov	r3, #115200
 276 000c 4360     		str	r3, [r0, #4]
 311:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 277              		.loc 1 311 3 is_stmt 1 view .LVU79
 311:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 278              		.loc 1 311 26 is_stmt 0 view .LVU80
 279 000e 0023     		movs	r3, #0
 280 0010 8360     		str	r3, [r0, #8]
 312:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 281              		.loc 1 312 3 is_stmt 1 view .LVU81
 312:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 282              		.loc 1 312 24 is_stmt 0 view .LVU82
 283 0012 C360     		str	r3, [r0, #12]
 313:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 284              		.loc 1 313 3 is_stmt 1 view .LVU83
 313:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 285              		.loc 1 313 22 is_stmt 0 view .LVU84
 286 0014 0361     		str	r3, [r0, #16]
 314:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 287              		.loc 1 314 3 is_stmt 1 view .LVU85
 314:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 288              		.loc 1 314 20 is_stmt 0 view .LVU86
 289 0016 0C22     		movs	r2, #12
 290 0018 4261     		str	r2, [r0, #20]
 315:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 291              		.loc 1 315 3 is_stmt 1 view .LVU87
 315:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 292              		.loc 1 315 25 is_stmt 0 view .LVU88
 293 001a 8361     		str	r3, [r0, #24]
 316:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 294              		.loc 1 316 3 is_stmt 1 view .LVU89
 316:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 295              		.loc 1 316 28 is_stmt 0 view .LVU90
 296 001c C361     		str	r3, [r0, #28]
 317:Core/Src/main.c ****   {
 297              		.loc 1 317 3 is_stmt 1 view .LVU91
 317:Core/Src/main.c ****   {
 298              		.loc 1 317 7 is_stmt 0 view .LVU92
 299 001e FFF7FEFF 		bl	HAL_UART_Init
 300              	.LVL4:
 325:Core/Src/main.c **** 
 301              		.loc 1 325 1 view .LVU93
 302 0022 08BD     		pop	{r3, pc}
 303              	.L11:
 304              		.align	2
ARM GAS  /tmp/ccRygZfs.s 			page 13


 305              	.L10:
 306 0024 00000000 		.word	huart1
 307 0028 00100140 		.word	1073811456
 308              		.cfi_endproc
 309              	.LFE136:
 311              		.section	.text.MX_TIM11_Init,"ax",%progbits
 312              		.align	1
 313              		.syntax unified
 314              		.thumb
 315              		.thumb_func
 316              		.fpu fpv4-sp-d16
 318              	MX_TIM11_Init:
 319              	.LFB133:
 207:Core/Src/main.c **** 
 320              		.loc 1 207 1 is_stmt 1 view -0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324 0000 08B5     		push	{r3, lr}
 325              	.LCFI4:
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 3, -8
 328              		.cfi_offset 14, -4
 216:Core/Src/main.c ****   htim11.Init.Prescaler = 0;
 329              		.loc 1 216 3 view .LVU95
 216:Core/Src/main.c ****   htim11.Init.Prescaler = 0;
 330              		.loc 1 216 19 is_stmt 0 view .LVU96
 331 0002 0748     		ldr	r0, .L14
 332 0004 074B     		ldr	r3, .L14+4
 333 0006 0360     		str	r3, [r0]
 217:Core/Src/main.c ****   htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
 334              		.loc 1 217 3 is_stmt 1 view .LVU97
 217:Core/Src/main.c ****   htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
 335              		.loc 1 217 25 is_stmt 0 view .LVU98
 336 0008 0023     		movs	r3, #0
 337 000a 4360     		str	r3, [r0, #4]
 218:Core/Src/main.c ****   htim11.Init.Period = 1905;
 338              		.loc 1 218 3 is_stmt 1 view .LVU99
 218:Core/Src/main.c ****   htim11.Init.Period = 1905;
 339              		.loc 1 218 27 is_stmt 0 view .LVU100
 340 000c 8360     		str	r3, [r0, #8]
 219:Core/Src/main.c ****   htim11.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 341              		.loc 1 219 3 is_stmt 1 view .LVU101
 219:Core/Src/main.c ****   htim11.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 342              		.loc 1 219 22 is_stmt 0 view .LVU102
 343 000e 40F27172 		movw	r2, #1905
 344 0012 C260     		str	r2, [r0, #12]
 220:Core/Src/main.c ****   htim11.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 345              		.loc 1 220 3 is_stmt 1 view .LVU103
 220:Core/Src/main.c ****   htim11.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 346              		.loc 1 220 29 is_stmt 0 view .LVU104
 347 0014 0361     		str	r3, [r0, #16]
 221:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim11) != HAL_OK)
 348              		.loc 1 221 3 is_stmt 1 view .LVU105
 221:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim11) != HAL_OK)
 349              		.loc 1 221 33 is_stmt 0 view .LVU106
 350 0016 8023     		movs	r3, #128
ARM GAS  /tmp/ccRygZfs.s 			page 14


 351 0018 8361     		str	r3, [r0, #24]
 222:Core/Src/main.c ****   {
 352              		.loc 1 222 3 is_stmt 1 view .LVU107
 222:Core/Src/main.c ****   {
 353              		.loc 1 222 7 is_stmt 0 view .LVU108
 354 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 355              	.LVL5:
 230:Core/Src/main.c **** 
 356              		.loc 1 230 1 view .LVU109
 357 001e 08BD     		pop	{r3, pc}
 358              	.L15:
 359              		.align	2
 360              	.L14:
 361 0020 00000000 		.word	htim11
 362 0024 00480140 		.word	1073825792
 363              		.cfi_endproc
 364              	.LFE133:
 366              		.section	.text.MX_TIM14_Init,"ax",%progbits
 367              		.align	1
 368              		.syntax unified
 369              		.thumb
 370              		.thumb_func
 371              		.fpu fpv4-sp-d16
 373              	MX_TIM14_Init:
 374              	.LFB135:
 269:Core/Src/main.c **** 
 375              		.loc 1 269 1 is_stmt 1 view -0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379 0000 08B5     		push	{r3, lr}
 380              	.LCFI5:
 381              		.cfi_def_cfa_offset 8
 382              		.cfi_offset 3, -8
 383              		.cfi_offset 14, -4
 278:Core/Src/main.c ****   htim14.Init.Prescaler = 0;
 384              		.loc 1 278 3 view .LVU111
 278:Core/Src/main.c ****   htim14.Init.Prescaler = 0;
 385              		.loc 1 278 19 is_stmt 0 view .LVU112
 386 0002 0748     		ldr	r0, .L18
 387 0004 074B     		ldr	r3, .L18+4
 388 0006 0360     		str	r3, [r0]
 279:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 389              		.loc 1 279 3 is_stmt 1 view .LVU113
 279:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 390              		.loc 1 279 25 is_stmt 0 view .LVU114
 391 0008 0023     		movs	r3, #0
 392 000a 4360     		str	r3, [r0, #4]
 280:Core/Src/main.c ****   htim14.Init.Period = 1749;
 393              		.loc 1 280 3 is_stmt 1 view .LVU115
 280:Core/Src/main.c ****   htim14.Init.Period = 1749;
 394              		.loc 1 280 27 is_stmt 0 view .LVU116
 395 000c 8360     		str	r3, [r0, #8]
 281:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 396              		.loc 1 281 3 is_stmt 1 view .LVU117
 281:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 397              		.loc 1 281 22 is_stmt 0 view .LVU118
ARM GAS  /tmp/ccRygZfs.s 			page 15


 398 000e 40F2D562 		movw	r2, #1749
 399 0012 C260     		str	r2, [r0, #12]
 282:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 400              		.loc 1 282 3 is_stmt 1 view .LVU119
 282:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 401              		.loc 1 282 29 is_stmt 0 view .LVU120
 402 0014 0361     		str	r3, [r0, #16]
 283:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 403              		.loc 1 283 3 is_stmt 1 view .LVU121
 283:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 404              		.loc 1 283 33 is_stmt 0 view .LVU122
 405 0016 8023     		movs	r3, #128
 406 0018 8361     		str	r3, [r0, #24]
 284:Core/Src/main.c ****   {
 407              		.loc 1 284 3 is_stmt 1 view .LVU123
 284:Core/Src/main.c ****   {
 408              		.loc 1 284 7 is_stmt 0 view .LVU124
 409 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 410              	.LVL6:
 292:Core/Src/main.c **** 
 411              		.loc 1 292 1 view .LVU125
 412 001e 08BD     		pop	{r3, pc}
 413              	.L19:
 414              		.align	2
 415              	.L18:
 416 0020 00000000 		.word	htim14
 417 0024 00200040 		.word	1073750016
 418              		.cfi_endproc
 419              	.LFE135:
 421              		.section	.text.MX_TIM13_Init,"ax",%progbits
 422              		.align	1
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 426              		.fpu fpv4-sp-d16
 428              	MX_TIM13_Init:
 429              	.LFB134:
 238:Core/Src/main.c **** 
 430              		.loc 1 238 1 is_stmt 1 view -0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434 0000 08B5     		push	{r3, lr}
 435              	.LCFI6:
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 3, -8
 438              		.cfi_offset 14, -4
 247:Core/Src/main.c ****   htim13.Init.Prescaler = 0;
 439              		.loc 1 247 3 view .LVU127
 247:Core/Src/main.c ****   htim13.Init.Prescaler = 0;
 440              		.loc 1 247 19 is_stmt 0 view .LVU128
 441 0002 0648     		ldr	r0, .L22
 442 0004 064B     		ldr	r3, .L22+4
 443 0006 0360     		str	r3, [r0]
 248:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 444              		.loc 1 248 3 is_stmt 1 view .LVU129
 248:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  /tmp/ccRygZfs.s 			page 16


 445              		.loc 1 248 25 is_stmt 0 view .LVU130
 446 0008 0023     		movs	r3, #0
 447 000a 4360     		str	r3, [r0, #4]
 249:Core/Src/main.c ****   htim13.Init.Period = 83;
 448              		.loc 1 249 3 is_stmt 1 view .LVU131
 249:Core/Src/main.c ****   htim13.Init.Period = 83;
 449              		.loc 1 249 27 is_stmt 0 view .LVU132
 450 000c 8360     		str	r3, [r0, #8]
 250:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 451              		.loc 1 250 3 is_stmt 1 view .LVU133
 250:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 452              		.loc 1 250 22 is_stmt 0 view .LVU134
 453 000e 5322     		movs	r2, #83
 454 0010 C260     		str	r2, [r0, #12]
 251:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 455              		.loc 1 251 3 is_stmt 1 view .LVU135
 251:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 456              		.loc 1 251 29 is_stmt 0 view .LVU136
 457 0012 0361     		str	r3, [r0, #16]
 252:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 458              		.loc 1 252 3 is_stmt 1 view .LVU137
 252:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 459              		.loc 1 252 33 is_stmt 0 view .LVU138
 460 0014 8361     		str	r3, [r0, #24]
 253:Core/Src/main.c ****   {
 461              		.loc 1 253 3 is_stmt 1 view .LVU139
 253:Core/Src/main.c ****   {
 462              		.loc 1 253 7 is_stmt 0 view .LVU140
 463 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 464              	.LVL7:
 261:Core/Src/main.c **** 
 465              		.loc 1 261 1 view .LVU141
 466 001a 08BD     		pop	{r3, pc}
 467              	.L23:
 468              		.align	2
 469              	.L22:
 470 001c 00000000 		.word	htim13
 471 0020 001C0040 		.word	1073748992
 472              		.cfi_endproc
 473              	.LFE134:
 475              		.section	.text.SystemClock_Config,"ax",%progbits
 476              		.align	1
 477              		.global	SystemClock_Config
 478              		.syntax unified
 479              		.thumb
 480              		.thumb_func
 481              		.fpu fpv4-sp-d16
 483              	SystemClock_Config:
 484              	.LFB131:
 136:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 485              		.loc 1 136 1 is_stmt 1 view -0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 80
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489 0000 30B5     		push	{r4, r5, lr}
 490              	.LCFI7:
 491              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccRygZfs.s 			page 17


 492              		.cfi_offset 4, -12
 493              		.cfi_offset 5, -8
 494              		.cfi_offset 14, -4
 495 0002 95B0     		sub	sp, sp, #84
 496              	.LCFI8:
 497              		.cfi_def_cfa_offset 96
 137:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 498              		.loc 1 137 3 view .LVU143
 137:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 499              		.loc 1 137 22 is_stmt 0 view .LVU144
 500 0004 3022     		movs	r2, #48
 501 0006 0021     		movs	r1, #0
 502 0008 08A8     		add	r0, sp, #32
 503 000a FFF7FEFF 		bl	memset
 504              	.LVL8:
 138:Core/Src/main.c **** 
 505              		.loc 1 138 3 is_stmt 1 view .LVU145
 138:Core/Src/main.c **** 
 506              		.loc 1 138 22 is_stmt 0 view .LVU146
 507 000e 0024     		movs	r4, #0
 508 0010 0394     		str	r4, [sp, #12]
 509 0012 0494     		str	r4, [sp, #16]
 510 0014 0594     		str	r4, [sp, #20]
 511 0016 0694     		str	r4, [sp, #24]
 512 0018 0794     		str	r4, [sp, #28]
 142:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 513              		.loc 1 142 3 is_stmt 1 view .LVU147
 514              	.LBB7:
 142:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 515              		.loc 1 142 3 view .LVU148
 516 001a 0194     		str	r4, [sp, #4]
 142:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 517              		.loc 1 142 3 view .LVU149
 518 001c 1B4B     		ldr	r3, .L26
 519 001e 1A6C     		ldr	r2, [r3, #64]
 520 0020 42F08052 		orr	r2, r2, #268435456
 521 0024 1A64     		str	r2, [r3, #64]
 142:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 522              		.loc 1 142 3 view .LVU150
 523 0026 1B6C     		ldr	r3, [r3, #64]
 524 0028 03F08053 		and	r3, r3, #268435456
 525 002c 0193     		str	r3, [sp, #4]
 142:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 526              		.loc 1 142 3 view .LVU151
 527 002e 019B     		ldr	r3, [sp, #4]
 528              	.LBE7:
 142:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 529              		.loc 1 142 3 view .LVU152
 143:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
 530              		.loc 1 143 3 view .LVU153
 531              	.LBB8:
 143:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
 532              		.loc 1 143 3 view .LVU154
 533 0030 0294     		str	r4, [sp, #8]
 143:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
 534              		.loc 1 143 3 view .LVU155
 535 0032 174B     		ldr	r3, .L26+4
ARM GAS  /tmp/ccRygZfs.s 			page 18


 536 0034 1A68     		ldr	r2, [r3]
 537 0036 42F48042 		orr	r2, r2, #16384
 538 003a 1A60     		str	r2, [r3]
 143:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
 539              		.loc 1 143 3 view .LVU156
 540 003c 1B68     		ldr	r3, [r3]
 541 003e 03F48043 		and	r3, r3, #16384
 542 0042 0293     		str	r3, [sp, #8]
 143:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
 543              		.loc 1 143 3 view .LVU157
 544 0044 029B     		ldr	r3, [sp, #8]
 545              	.LBE8:
 143:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
 546              		.loc 1 143 3 view .LVU158
 146:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 547              		.loc 1 146 3 view .LVU159
 146:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 548              		.loc 1 146 36 is_stmt 0 view .LVU160
 549 0046 0123     		movs	r3, #1
 550 0048 0893     		str	r3, [sp, #32]
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 551              		.loc 1 147 3 is_stmt 1 view .LVU161
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 552              		.loc 1 147 30 is_stmt 0 view .LVU162
 553 004a 4FF48033 		mov	r3, #65536
 554 004e 0993     		str	r3, [sp, #36]
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 555              		.loc 1 148 3 is_stmt 1 view .LVU163
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 556              		.loc 1 148 34 is_stmt 0 view .LVU164
 557 0050 0225     		movs	r5, #2
 558 0052 0E95     		str	r5, [sp, #56]
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 559              		.loc 1 149 3 is_stmt 1 view .LVU165
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 560              		.loc 1 149 35 is_stmt 0 view .LVU166
 561 0054 4FF48003 		mov	r3, #4194304
 562 0058 0F93     		str	r3, [sp, #60]
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 563              		.loc 1 150 3 is_stmt 1 view .LVU167
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 564              		.loc 1 150 30 is_stmt 0 view .LVU168
 565 005a 0423     		movs	r3, #4
 566 005c 1093     		str	r3, [sp, #64]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 567              		.loc 1 151 3 is_stmt 1 view .LVU169
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 568              		.loc 1 151 30 is_stmt 0 view .LVU170
 569 005e A823     		movs	r3, #168
 570 0060 1193     		str	r3, [sp, #68]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 571              		.loc 1 152 3 is_stmt 1 view .LVU171
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 572              		.loc 1 152 30 is_stmt 0 view .LVU172
 573 0062 1295     		str	r5, [sp, #72]
 153:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 574              		.loc 1 153 3 is_stmt 1 view .LVU173
ARM GAS  /tmp/ccRygZfs.s 			page 19


 153:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 575              		.loc 1 153 30 is_stmt 0 view .LVU174
 576 0064 0723     		movs	r3, #7
 577 0066 1393     		str	r3, [sp, #76]
 154:Core/Src/main.c ****   {
 578              		.loc 1 154 3 is_stmt 1 view .LVU175
 154:Core/Src/main.c ****   {
 579              		.loc 1 154 7 is_stmt 0 view .LVU176
 580 0068 08A8     		add	r0, sp, #32
 581 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 582              	.LVL9:
 160:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 583              		.loc 1 160 3 is_stmt 1 view .LVU177
 160:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 584              		.loc 1 160 31 is_stmt 0 view .LVU178
 585 006e 0F23     		movs	r3, #15
 586 0070 0393     		str	r3, [sp, #12]
 162:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 587              		.loc 1 162 3 is_stmt 1 view .LVU179
 162:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 588              		.loc 1 162 34 is_stmt 0 view .LVU180
 589 0072 0495     		str	r5, [sp, #16]
 163:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 590              		.loc 1 163 3 is_stmt 1 view .LVU181
 163:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 591              		.loc 1 163 35 is_stmt 0 view .LVU182
 592 0074 0594     		str	r4, [sp, #20]
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 593              		.loc 1 164 3 is_stmt 1 view .LVU183
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 594              		.loc 1 164 36 is_stmt 0 view .LVU184
 595 0076 4FF4A053 		mov	r3, #5120
 596 007a 0693     		str	r3, [sp, #24]
 165:Core/Src/main.c **** 
 597              		.loc 1 165 3 is_stmt 1 view .LVU185
 165:Core/Src/main.c **** 
 598              		.loc 1 165 36 is_stmt 0 view .LVU186
 599 007c 0793     		str	r3, [sp, #28]
 167:Core/Src/main.c ****   {
 600              		.loc 1 167 3 is_stmt 1 view .LVU187
 167:Core/Src/main.c ****   {
 601              		.loc 1 167 7 is_stmt 0 view .LVU188
 602 007e 0521     		movs	r1, #5
 603 0080 03A8     		add	r0, sp, #12
 604 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 605              	.LVL10:
 171:Core/Src/main.c **** 
 606              		.loc 1 171 1 view .LVU189
 607 0086 15B0     		add	sp, sp, #84
 608              	.LCFI9:
 609              		.cfi_def_cfa_offset 12
 610              		@ sp needed
 611 0088 30BD     		pop	{r4, r5, pc}
 612              	.L27:
 613 008a 00BF     		.align	2
 614              	.L26:
 615 008c 00380240 		.word	1073887232
ARM GAS  /tmp/ccRygZfs.s 			page 20


 616 0090 00700040 		.word	1073770496
 617              		.cfi_endproc
 618              	.LFE131:
 620              		.section	.text.main,"ax",%progbits
 621              		.align	1
 622              		.global	main
 623              		.syntax unified
 624              		.thumb
 625              		.thumb_func
 626              		.fpu fpv4-sp-d16
 628              	main:
 629              	.LFB130:
  80:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 630              		.loc 1 80 1 is_stmt 1 view -0
 631              		.cfi_startproc
 632              		@ Volatile: function does not return.
 633              		@ args = 0, pretend = 0, frame = 0
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 635 0000 08B5     		push	{r3, lr}
 636              	.LCFI10:
 637              		.cfi_def_cfa_offset 8
 638              		.cfi_offset 3, -8
 639              		.cfi_offset 14, -4
  88:Core/Src/main.c **** 
 640              		.loc 1 88 3 view .LVU191
 641 0002 FFF7FEFF 		bl	HAL_Init
 642              	.LVL11:
  95:Core/Src/main.c **** 
 643              		.loc 1 95 3 view .LVU192
 644 0006 FFF7FEFF 		bl	SystemClock_Config
 645              	.LVL12:
 102:Core/Src/main.c ****   MX_SDIO_SD_Init();
 646              		.loc 1 102 3 view .LVU193
 647 000a FFF7FEFF 		bl	MX_GPIO_Init
 648              	.LVL13:
 103:Core/Src/main.c ****   MX_USART1_UART_Init();
 649              		.loc 1 103 3 view .LVU194
 650 000e FFF7FEFF 		bl	MX_SDIO_SD_Init
 651              	.LVL14:
 104:Core/Src/main.c ****   MX_FATFS_Init();
 652              		.loc 1 104 3 view .LVU195
 653 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 654              	.LVL15:
 105:Core/Src/main.c ****   MX_TIM11_Init();
 655              		.loc 1 105 3 view .LVU196
 656 0016 FFF7FEFF 		bl	MX_FATFS_Init
 657              	.LVL16:
 106:Core/Src/main.c ****   MX_TIM14_Init();
 658              		.loc 1 106 3 view .LVU197
 659 001a FFF7FEFF 		bl	MX_TIM11_Init
 660              	.LVL17:
 107:Core/Src/main.c ****   MX_TIM13_Init();
 661              		.loc 1 107 3 view .LVU198
 662 001e FFF7FEFF 		bl	MX_TIM14_Init
 663              	.LVL18:
 108:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 664              		.loc 1 108 3 view .LVU199
ARM GAS  /tmp/ccRygZfs.s 			page 21


 665 0022 FFF7FEFF 		bl	MX_TIM13_Init
 666              	.LVL19:
 667              	.L29:
 115:Core/Src/main.c ****   {
 668              		.loc 1 115 3 discriminator 1 view .LVU200
 118:Core/Src/main.c ****     HAL_Delay(250);
 669              		.loc 1 118 5 discriminator 1 view .LVU201
 670 0026 114C     		ldr	r4, .L31
 671 0028 4FF48051 		mov	r1, #4096
 672 002c 2046     		mov	r0, r4
 673 002e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 674              	.LVL20:
 119:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_13);
 675              		.loc 1 119 5 discriminator 1 view .LVU202
 676 0032 FA20     		movs	r0, #250
 677 0034 FFF7FEFF 		bl	HAL_Delay
 678              	.LVL21:
 120:Core/Src/main.c ****     HAL_Delay(250);
 679              		.loc 1 120 5 discriminator 1 view .LVU203
 680 0038 4FF40051 		mov	r1, #8192
 681 003c 2046     		mov	r0, r4
 682 003e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 683              	.LVL22:
 121:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_14);
 684              		.loc 1 121 5 discriminator 1 view .LVU204
 685 0042 FA20     		movs	r0, #250
 686 0044 FFF7FEFF 		bl	HAL_Delay
 687              	.LVL23:
 122:Core/Src/main.c ****     HAL_Delay(250);
 688              		.loc 1 122 5 discriminator 1 view .LVU205
 689 0048 4FF48041 		mov	r1, #16384
 690 004c 2046     		mov	r0, r4
 691 004e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 692              	.LVL24:
 123:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_15);
 693              		.loc 1 123 5 discriminator 1 view .LVU206
 694 0052 FA20     		movs	r0, #250
 695 0054 FFF7FEFF 		bl	HAL_Delay
 696              	.LVL25:
 124:Core/Src/main.c ****     HAL_Delay(250);
 697              		.loc 1 124 5 discriminator 1 view .LVU207
 698 0058 4FF40041 		mov	r1, #32768
 699 005c 2046     		mov	r0, r4
 700 005e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 701              	.LVL26:
 125:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 702              		.loc 1 125 5 discriminator 1 view .LVU208
 703 0062 FA20     		movs	r0, #250
 704 0064 FFF7FEFF 		bl	HAL_Delay
 705              	.LVL27:
 115:Core/Src/main.c ****   {
 706              		.loc 1 115 9 discriminator 1 view .LVU209
 707 0068 DDE7     		b	.L29
 708              	.L32:
 709 006a 00BF     		.align	2
 710              	.L31:
 711 006c 000C0240 		.word	1073875968
ARM GAS  /tmp/ccRygZfs.s 			page 22


 712              		.cfi_endproc
 713              	.LFE130:
 715              		.section	.text.Error_Handler,"ax",%progbits
 716              		.align	1
 717              		.global	Error_Handler
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 721              		.fpu fpv4-sp-d16
 723              	Error_Handler:
 724              	.LFB138:
 366:Core/Src/main.c **** 
 367:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 368:Core/Src/main.c **** 
 369:Core/Src/main.c **** /* USER CODE END 4 */
 370:Core/Src/main.c **** 
 371:Core/Src/main.c **** /**
 372:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 373:Core/Src/main.c ****   * @retval None
 374:Core/Src/main.c ****   */
 375:Core/Src/main.c **** void Error_Handler(void)
 376:Core/Src/main.c **** {
 725              		.loc 1 376 1 view -0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729              		@ link register save eliminated.
 377:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 378:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 381:Core/Src/main.c **** }
 730              		.loc 1 381 1 view .LVU211
 731 0000 7047     		bx	lr
 732              		.cfi_endproc
 733              	.LFE138:
 735              		.comm	huart1,64,4
 736              		.comm	htim14,64,4
 737              		.comm	htim13,64,4
 738              		.comm	htim11,64,4
 739              		.comm	hsd,132,4
 740              		.text
 741              	.Letext0:
 742              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 743              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 744              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 745              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 746              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 747              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 748              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 749              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 750              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 751              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_sdmmc.h"
 752              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sd.h"
 753              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 754              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 755              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccRygZfs.s 			page 23


 756              		.file 16 "Middlewares/Third_Party/FatFs/src/integer.h"
 757              		.file 17 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 758              		.file 18 "/usr/include/newlib/sys/_types.h"
 759              		.file 19 "/usr/include/newlib/sys/reent.h"
 760              		.file 20 "/usr/include/newlib/sys/lock.h"
 761              		.file 21 "/usr/include/newlib/stdlib.h"
 762              		.file 22 "Middlewares/Third_Party/FatFs/src/ff.h"
 763              		.file 23 "Middlewares/Third_Party/FatFs/src/diskio.h"
 764              		.file 24 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 765              		.file 25 "FATFS/Target/sd_diskio.h"
 766              		.file 26 "FATFS/App/fatfs.h"
 767              		.file 27 "<built-in>"
ARM GAS  /tmp/ccRygZfs.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccRygZfs.s:18     .text.MX_SDIO_SD_Init:0000000000000000 $t
     /tmp/ccRygZfs.s:25     .text.MX_SDIO_SD_Init:0000000000000000 MX_SDIO_SD_Init
     /tmp/ccRygZfs.s:63     .text.MX_SDIO_SD_Init:000000000000001c $d
                            *COM*:0000000000000084 hsd
     /tmp/ccRygZfs.s:69     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccRygZfs.s:75     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccRygZfs.s:244    .text.MX_GPIO_Init:00000000000000bc $d
     /tmp/ccRygZfs.s:251    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccRygZfs.s:257    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccRygZfs.s:306    .text.MX_USART1_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart1
     /tmp/ccRygZfs.s:312    .text.MX_TIM11_Init:0000000000000000 $t
     /tmp/ccRygZfs.s:318    .text.MX_TIM11_Init:0000000000000000 MX_TIM11_Init
     /tmp/ccRygZfs.s:361    .text.MX_TIM11_Init:0000000000000020 $d
                            *COM*:0000000000000040 htim11
     /tmp/ccRygZfs.s:367    .text.MX_TIM14_Init:0000000000000000 $t
     /tmp/ccRygZfs.s:373    .text.MX_TIM14_Init:0000000000000000 MX_TIM14_Init
     /tmp/ccRygZfs.s:416    .text.MX_TIM14_Init:0000000000000020 $d
                            *COM*:0000000000000040 htim14
     /tmp/ccRygZfs.s:422    .text.MX_TIM13_Init:0000000000000000 $t
     /tmp/ccRygZfs.s:428    .text.MX_TIM13_Init:0000000000000000 MX_TIM13_Init
     /tmp/ccRygZfs.s:470    .text.MX_TIM13_Init:000000000000001c $d
                            *COM*:0000000000000040 htim13
     /tmp/ccRygZfs.s:476    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccRygZfs.s:483    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccRygZfs.s:615    .text.SystemClock_Config:000000000000008c $d
     /tmp/ccRygZfs.s:621    .text.main:0000000000000000 $t
     /tmp/ccRygZfs.s:628    .text.main:0000000000000000 main
     /tmp/ccRygZfs.s:711    .text.main:000000000000006c $d
     /tmp/ccRygZfs.s:716    .text.Error_Handler:0000000000000000 $t
     /tmp/ccRygZfs.s:723    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
HAL_TIM_Base_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_FATFS_Init
HAL_GPIO_TogglePin
HAL_Delay
